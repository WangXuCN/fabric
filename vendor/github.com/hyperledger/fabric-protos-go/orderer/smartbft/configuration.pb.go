// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderer/smartbft/configuration.proto

package smartbft

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Options_Rotation int32

const (
	Options_UNDEFINED Options_Rotation = 0
	Options_OFF       Options_Rotation = 1
	Options_ON        Options_Rotation = 2
)

var Options_Rotation_name = map[int32]string{
	0: "UNDEFINED",
	1: "OFF",
	2: "ON",
}

var Options_Rotation_value = map[string]int32{
	"UNDEFINED": 0,
	"OFF":       1,
	"ON":        2,
}

func (x Options_Rotation) String() string {
	return proto.EnumName(Options_Rotation_name, int32(x))
}

func (Options_Rotation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a8a81ac5a2771ff3, []int{2, 0}
}

// ConfigMetadata is serialized and set as the value of ConsensusType.Metadata in
// a channel configuration when the ConsensusType.Type is set "smartbft".
type ConfigMetadata struct {
	Consenters           []*Consenter `protobuf:"bytes,1,rep,name=consenters,proto3" json:"consenters,omitempty"`
	Options              *Options     `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ConfigMetadata) Reset()         { *m = ConfigMetadata{} }
func (m *ConfigMetadata) String() string { return proto.CompactTextString(m) }
func (*ConfigMetadata) ProtoMessage()    {}
func (*ConfigMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8a81ac5a2771ff3, []int{0}
}

func (m *ConfigMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigMetadata.Unmarshal(m, b)
}
func (m *ConfigMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigMetadata.Marshal(b, m, deterministic)
}
func (m *ConfigMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigMetadata.Merge(m, src)
}
func (m *ConfigMetadata) XXX_Size() int {
	return xxx_messageInfo_ConfigMetadata.Size(m)
}
func (m *ConfigMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigMetadata proto.InternalMessageInfo

func (m *ConfigMetadata) GetConsenters() []*Consenter {
	if m != nil {
		return m.Consenters
	}
	return nil
}

func (m *ConfigMetadata) GetOptions() *Options {
	if m != nil {
		return m.Options
	}
	return nil
}

// Consenter represents a consenting node (i.e. replica).
type Consenter struct {
	ConsenterId          uint64   `protobuf:"varint,1,opt,name=consenter_id,json=consenterId,proto3" json:"consenter_id,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	MspId                string   `protobuf:"bytes,4,opt,name=msp_id,json=mspId,proto3" json:"msp_id,omitempty"`
	Identity             []byte   `protobuf:"bytes,5,opt,name=identity,proto3" json:"identity,omitempty"`
	ClientTlsCert        []byte   `protobuf:"bytes,6,opt,name=client_tls_cert,json=clientTlsCert,proto3" json:"client_tls_cert,omitempty"`
	ServerTlsCert        []byte   `protobuf:"bytes,7,opt,name=server_tls_cert,json=serverTlsCert,proto3" json:"server_tls_cert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Consenter) Reset()         { *m = Consenter{} }
func (m *Consenter) String() string { return proto.CompactTextString(m) }
func (*Consenter) ProtoMessage()    {}
func (*Consenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8a81ac5a2771ff3, []int{1}
}

func (m *Consenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consenter.Unmarshal(m, b)
}
func (m *Consenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consenter.Marshal(b, m, deterministic)
}
func (m *Consenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consenter.Merge(m, src)
}
func (m *Consenter) XXX_Size() int {
	return xxx_messageInfo_Consenter.Size(m)
}
func (m *Consenter) XXX_DiscardUnknown() {
	xxx_messageInfo_Consenter.DiscardUnknown(m)
}

var xxx_messageInfo_Consenter proto.InternalMessageInfo

func (m *Consenter) GetConsenterId() uint64 {
	if m != nil {
		return m.ConsenterId
	}
	return 0
}

func (m *Consenter) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Consenter) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Consenter) GetMspId() string {
	if m != nil {
		return m.MspId
	}
	return ""
}

func (m *Consenter) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Consenter) GetClientTlsCert() []byte {
	if m != nil {
		return m.ClientTlsCert
	}
	return nil
}

func (m *Consenter) GetServerTlsCert() []byte {
	if m != nil {
		return m.ServerTlsCert
	}
	return nil
}

// Options to be specified for all the smartbft nodes. These can be modified on a
// per-channel basis.
type Options struct {
	RequestBatchMaxCount      uint64           `protobuf:"varint,2,opt,name=request_batch_max_count,json=requestBatchMaxCount,proto3" json:"request_batch_max_count,omitempty"`
	RequestBatchMaxBytes      uint64           `protobuf:"varint,3,opt,name=request_batch_max_bytes,json=requestBatchMaxBytes,proto3" json:"request_batch_max_bytes,omitempty"`
	RequestBatchMaxInterval   string           `protobuf:"bytes,4,opt,name=request_batch_max_interval,json=requestBatchMaxInterval,proto3" json:"request_batch_max_interval,omitempty"`
	IncomingMessageBufferSize uint64           `protobuf:"varint,5,opt,name=incoming_message_buffer_size,json=incomingMessageBufferSize,proto3" json:"incoming_message_buffer_size,omitempty"`
	RequestPoolSize           uint64           `protobuf:"varint,6,opt,name=request_pool_size,json=requestPoolSize,proto3" json:"request_pool_size,omitempty"`
	RequestForwardTimeout     string           `protobuf:"bytes,7,opt,name=request_forward_timeout,json=requestForwardTimeout,proto3" json:"request_forward_timeout,omitempty"`
	RequestComplainTimeout    string           `protobuf:"bytes,8,opt,name=request_complain_timeout,json=requestComplainTimeout,proto3" json:"request_complain_timeout,omitempty"`
	RequestAutoRemoveTimeout  string           `protobuf:"bytes,9,opt,name=request_auto_remove_timeout,json=requestAutoRemoveTimeout,proto3" json:"request_auto_remove_timeout,omitempty"`
	ViewChangeResendInterval  string           `protobuf:"bytes,10,opt,name=view_change_resend_interval,json=viewChangeResendInterval,proto3" json:"view_change_resend_interval,omitempty"`
	ViewChangeTimeout         string           `protobuf:"bytes,11,opt,name=view_change_timeout,json=viewChangeTimeout,proto3" json:"view_change_timeout,omitempty"`
	LeaderHeartbeatTimeout    string           `protobuf:"bytes,12,opt,name=leader_heartbeat_timeout,json=leaderHeartbeatTimeout,proto3" json:"leader_heartbeat_timeout,omitempty"`
	LeaderHeartbeatCount      uint64           `protobuf:"varint,13,opt,name=leader_heartbeat_count,json=leaderHeartbeatCount,proto3" json:"leader_heartbeat_count,omitempty"`
	CollectTimeout            string           `protobuf:"bytes,14,opt,name=collect_timeout,json=collectTimeout,proto3" json:"collect_timeout,omitempty"`
	SyncOnStart               bool             `protobuf:"varint,15,opt,name=sync_on_start,json=syncOnStart,proto3" json:"sync_on_start,omitempty"`
	SpeedUpViewChange         bool             `protobuf:"varint,16,opt,name=speed_up_view_change,json=speedUpViewChange,proto3" json:"speed_up_view_change,omitempty"`
	LeaderRotation            Options_Rotation `protobuf:"varint,17,opt,name=leader_rotation,json=leaderRotation,proto3,enum=smartbft.Options_Rotation" json:"leader_rotation,omitempty"`
	DecisionsPerLeader        uint64           `protobuf:"varint,18,opt,name=decisions_per_leader,json=decisionsPerLeader,proto3" json:"decisions_per_leader,omitempty"`
	RequestMaxBytes           uint64           `protobuf:"varint,19,opt,name=request_max_bytes,json=requestMaxBytes,proto3" json:"request_max_bytes,omitempty"`
	RequestPoolSubmitTimeout  uint64           `protobuf:"varint,20,opt,name=request_pool_submit_timeout,json=requestPoolSubmitTimeout,proto3" json:"request_pool_submit_timeout,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}         `json:"-"`
	XXX_unrecognized          []byte           `json:"-"`
	XXX_sizecache             int32            `json:"-"`
}

func (m *Options) Reset()         { *m = Options{} }
func (m *Options) String() string { return proto.CompactTextString(m) }
func (*Options) ProtoMessage()    {}
func (*Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8a81ac5a2771ff3, []int{2}
}

func (m *Options) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Options.Unmarshal(m, b)
}
func (m *Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Options.Marshal(b, m, deterministic)
}
func (m *Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Options.Merge(m, src)
}
func (m *Options) XXX_Size() int {
	return xxx_messageInfo_Options.Size(m)
}
func (m *Options) XXX_DiscardUnknown() {
	xxx_messageInfo_Options.DiscardUnknown(m)
}

var xxx_messageInfo_Options proto.InternalMessageInfo

func (m *Options) GetRequestBatchMaxCount() uint64 {
	if m != nil {
		return m.RequestBatchMaxCount
	}
	return 0
}

func (m *Options) GetRequestBatchMaxBytes() uint64 {
	if m != nil {
		return m.RequestBatchMaxBytes
	}
	return 0
}

func (m *Options) GetRequestBatchMaxInterval() string {
	if m != nil {
		return m.RequestBatchMaxInterval
	}
	return ""
}

func (m *Options) GetIncomingMessageBufferSize() uint64 {
	if m != nil {
		return m.IncomingMessageBufferSize
	}
	return 0
}

func (m *Options) GetRequestPoolSize() uint64 {
	if m != nil {
		return m.RequestPoolSize
	}
	return 0
}

func (m *Options) GetRequestForwardTimeout() string {
	if m != nil {
		return m.RequestForwardTimeout
	}
	return ""
}

func (m *Options) GetRequestComplainTimeout() string {
	if m != nil {
		return m.RequestComplainTimeout
	}
	return ""
}

func (m *Options) GetRequestAutoRemoveTimeout() string {
	if m != nil {
		return m.RequestAutoRemoveTimeout
	}
	return ""
}

func (m *Options) GetViewChangeResendInterval() string {
	if m != nil {
		return m.ViewChangeResendInterval
	}
	return ""
}

func (m *Options) GetViewChangeTimeout() string {
	if m != nil {
		return m.ViewChangeTimeout
	}
	return ""
}

func (m *Options) GetLeaderHeartbeatTimeout() string {
	if m != nil {
		return m.LeaderHeartbeatTimeout
	}
	return ""
}

func (m *Options) GetLeaderHeartbeatCount() uint64 {
	if m != nil {
		return m.LeaderHeartbeatCount
	}
	return 0
}

func (m *Options) GetCollectTimeout() string {
	if m != nil {
		return m.CollectTimeout
	}
	return ""
}

func (m *Options) GetSyncOnStart() bool {
	if m != nil {
		return m.SyncOnStart
	}
	return false
}

func (m *Options) GetSpeedUpViewChange() bool {
	if m != nil {
		return m.SpeedUpViewChange
	}
	return false
}

func (m *Options) GetLeaderRotation() Options_Rotation {
	if m != nil {
		return m.LeaderRotation
	}
	return Options_UNDEFINED
}

func (m *Options) GetDecisionsPerLeader() uint64 {
	if m != nil {
		return m.DecisionsPerLeader
	}
	return 0
}

func (m *Options) GetRequestMaxBytes() uint64 {
	if m != nil {
		return m.RequestMaxBytes
	}
	return 0
}

func (m *Options) GetRequestPoolSubmitTimeout() uint64 {
	if m != nil {
		return m.RequestPoolSubmitTimeout
	}
	return 0
}

func init() {
	proto.RegisterEnum("smartbft.Options_Rotation", Options_Rotation_name, Options_Rotation_value)
	proto.RegisterType((*ConfigMetadata)(nil), "smartbft.ConfigMetadata")
	proto.RegisterType((*Consenter)(nil), "smartbft.Consenter")
	proto.RegisterType((*Options)(nil), "smartbft.Options")
}

func init() {
	proto.RegisterFile("orderer/smartbft/configuration.proto", fileDescriptor_a8a81ac5a2771ff3)
}

var fileDescriptor_a8a81ac5a2771ff3 = []byte{
	// 794 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x95, 0x6d, 0x8f, 0xdb, 0x44,
	0x10, 0xc7, 0xf1, 0x5d, 0x9a, 0x87, 0xcd, 0xe5, 0x69, 0x2f, 0x6d, 0xcd, 0xc1, 0x8b, 0x10, 0x21,
	0x88, 0x8a, 0xe4, 0xa0, 0x2b, 0x45, 0x48, 0x08, 0x21, 0x92, 0x36, 0x22, 0x88, 0xbb, 0x54, 0x6e,
	0xcb, 0x0b, 0xde, 0xac, 0xd6, 0xf6, 0xc4, 0x59, 0xc9, 0xf6, 0x9a, 0xdd, 0x75, 0xda, 0xf4, 0x2b,
	0xf2, 0x09, 0xf8, 0x36, 0xc8, 0xbb, 0x7e, 0xe2, 0xc2, 0x3b, 0x7b, 0xfe, 0xff, 0xdf, 0xac, 0x67,
	0x34, 0x3b, 0x46, 0x5f, 0x72, 0x11, 0x80, 0x00, 0xb1, 0x94, 0x31, 0x15, 0xca, 0xdb, 0xab, 0xa5,
	0xcf, 0x93, 0x3d, 0x0b, 0x33, 0x41, 0x15, 0xe3, 0x89, 0x93, 0x0a, 0xae, 0x38, 0xee, 0x96, 0xea,
	0x5c, 0xa0, 0xe1, 0x5a, 0x1b, 0xee, 0x40, 0xd1, 0x80, 0x2a, 0x8a, 0x9f, 0x23, 0xe4, 0xf3, 0x44,
	0x42, 0xa2, 0x40, 0x48, 0xdb, 0x9a, 0x5d, 0x2e, 0xfa, 0xb7, 0xd7, 0x4e, 0x09, 0x38, 0xeb, 0x52,
	0x73, 0x1b, 0x36, 0xfc, 0x0d, 0xea, 0xf0, 0x34, 0x3f, 0x40, 0xda, 0x17, 0x33, 0x6b, 0xd1, 0xbf,
	0x9d, 0xd4, 0xc4, 0xce, 0x08, 0x6e, 0xe9, 0x98, 0xff, 0x63, 0xa1, 0x5e, 0x95, 0x06, 0x7f, 0x81,
	0xae, 0xaa, 0x44, 0x84, 0x05, 0xb6, 0x35, 0xb3, 0x16, 0x2d, 0xb7, 0x5f, 0xc5, 0xb6, 0x01, 0xc6,
	0xa8, 0x75, 0xe0, 0x52, 0xe9, 0xd4, 0x3d, 0x57, 0x3f, 0xe7, 0xb1, 0x94, 0x0b, 0x65, 0x5f, 0xce,
	0xac, 0xc5, 0xc0, 0xd5, 0xcf, 0xf8, 0x31, 0x6a, 0xc7, 0x32, 0xcd, 0x93, 0xb4, 0xb4, 0xf3, 0x51,
	0x2c, 0xd3, 0x6d, 0x80, 0x6f, 0x50, 0x97, 0x05, 0x90, 0x28, 0xa6, 0x4e, 0xf6, 0xa3, 0x99, 0xb5,
	0xb8, 0x72, 0xab, 0x77, 0xfc, 0x15, 0x1a, 0xf9, 0x11, 0x83, 0x44, 0x11, 0x15, 0x49, 0xe2, 0x83,
	0x50, 0x76, 0x5b, 0x5b, 0x06, 0x26, 0xfc, 0x36, 0x92, 0x6b, 0x10, 0x2a, 0xf7, 0x49, 0x10, 0x47,
	0x10, 0xb5, 0xaf, 0x63, 0x7c, 0x26, 0x5c, 0xf8, 0xe6, 0x7f, 0x77, 0x51, 0xa7, 0x28, 0x18, 0xbf,
	0x40, 0x4f, 0x05, 0xfc, 0x95, 0x81, 0x54, 0xc4, 0xa3, 0xca, 0x3f, 0x90, 0x98, 0x7e, 0x20, 0x3e,
	0xcf, 0x12, 0x53, 0x49, 0xcb, 0x9d, 0x16, 0xf2, 0x2a, 0x57, 0xef, 0xe8, 0x87, 0x75, 0xae, 0xfd,
	0x3f, 0xe6, 0x9d, 0x14, 0x48, 0x5d, 0xec, 0x39, 0xb6, 0xca, 0x35, 0xfc, 0x23, 0xba, 0x39, 0xc7,
	0x58, 0xde, 0xc1, 0x23, 0x8d, 0x8a, 0x86, 0x3c, 0x7d, 0x40, 0x6e, 0x0b, 0x19, 0xff, 0x8c, 0x3e,
	0x67, 0x89, 0xcf, 0x63, 0x96, 0x84, 0x24, 0x06, 0x29, 0x69, 0x08, 0xc4, 0xcb, 0xf6, 0x7b, 0x10,
	0x44, 0xb2, 0x8f, 0xa0, 0xdb, 0xd6, 0x72, 0x3f, 0x2d, 0x3d, 0x77, 0xc6, 0xb2, 0xd2, 0x8e, 0x37,
	0xec, 0x23, 0xe0, 0x67, 0x68, 0x52, 0x9e, 0x9e, 0x72, 0x1e, 0x19, 0xaa, 0xad, 0xa9, 0x51, 0x21,
	0xbc, 0xe6, 0x3c, 0xd2, 0xde, 0xef, 0xeb, 0x02, 0xf7, 0x5c, 0xbc, 0xa7, 0x22, 0x20, 0x8a, 0xc5,
	0xc0, 0x33, 0xd3, 0xd3, 0x9e, 0xfb, 0xb8, 0x90, 0x37, 0x46, 0x7d, 0x6b, 0x44, 0xfc, 0x03, 0xb2,
	0x4b, 0xce, 0xe7, 0x71, 0x1a, 0x51, 0x96, 0x54, 0x60, 0x57, 0x83, 0x4f, 0x0a, 0x7d, 0x5d, 0xc8,
	0x25, 0xf9, 0x13, 0xfa, 0xac, 0x24, 0x69, 0xa6, 0x38, 0x11, 0x10, 0xf3, 0x23, 0x54, 0x70, 0x4f,
	0xc3, 0x65, 0xf2, 0x5f, 0x32, 0xc5, 0x5d, 0x6d, 0x68, 0xe0, 0x47, 0x06, 0xef, 0x89, 0x7f, 0xa0,
	0x49, 0x08, 0x44, 0x80, 0x84, 0x24, 0xa8, 0x7b, 0x8b, 0x0c, 0x9e, 0x5b, 0xd6, 0xda, 0xe1, 0x6a,
	0x43, 0xd5, 0x5c, 0x07, 0x5d, 0x37, 0xf1, 0xf2, 0xd4, 0xbe, 0xc6, 0x26, 0x35, 0xd6, 0xa8, 0x33,
	0x02, 0x1a, 0x80, 0x20, 0x07, 0xc8, 0xef, 0x10, 0x50, 0x55, 0x41, 0x57, 0xa6, 0x4e, 0xa3, 0xff,
	0x5a, 0xca, 0x25, 0xf9, 0x1d, 0x7a, 0x72, 0x46, 0x9a, 0x81, 0x1b, 0x98, 0xc9, 0x79, 0xc0, 0x99,
	0x81, 0xfb, 0x1a, 0x8d, 0x7c, 0x1e, 0x45, 0xe0, 0xd7, 0xc7, 0x0c, 0xf5, 0x31, 0xc3, 0x22, 0x5c,
	0xa6, 0x9f, 0xa3, 0x81, 0x3c, 0x25, 0x3e, 0xe1, 0x09, 0x91, 0x8a, 0x0a, 0x65, 0x8f, 0x66, 0xd6,
	0xa2, 0xeb, 0xf6, 0xf3, 0xe0, 0x2e, 0x79, 0x93, 0x87, 0xf0, 0x12, 0x4d, 0x65, 0x0a, 0x10, 0x90,
	0x2c, 0x25, 0x8d, 0xaa, 0xed, 0xb1, 0xb6, 0x4e, 0xb4, 0xf6, 0x2e, 0xfd, 0xa3, 0x2a, 0x1a, 0xaf,
	0xd1, 0xa8, 0xf8, 0x66, 0xc1, 0x95, 0x5e, 0x52, 0xf6, 0x64, 0x66, 0x2d, 0x86, 0xb7, 0x37, 0x67,
	0x2b, 0xc4, 0x71, 0x0b, 0x87, 0x3b, 0x34, 0x48, 0xf9, 0x8e, 0xbf, 0x45, 0xd3, 0x00, 0x7c, 0x26,
	0x73, 0x17, 0x49, 0x41, 0x10, 0xa3, 0xdb, 0x58, 0x97, 0x8d, 0x2b, 0xed, 0x35, 0x88, 0xdf, 0xb5,
	0xd2, 0x1c, 0xd8, 0xfa, 0x7e, 0x5d, 0xff, 0x67, 0x60, 0xab, 0xab, 0xd5, 0x18, 0x1f, 0x33, 0xdc,
	0x99, 0x17, 0xb3, 0xba, 0x59, 0x53, 0x4d, 0xd9, 0xcd, 0x31, 0xd7, 0x86, 0xa2, 0x6d, 0xf3, 0x67,
	0xa8, 0x5b, 0x7d, 0xe8, 0x00, 0xf5, 0xde, 0xdd, 0xbf, 0x7c, 0xb5, 0xd9, 0xde, 0xbf, 0x7a, 0x39,
	0xfe, 0x04, 0x77, 0xd0, 0xe5, 0x6e, 0xb3, 0x19, 0x5b, 0xb8, 0x8d, 0x2e, 0x76, 0xf7, 0xe3, 0x8b,
	0xdf, 0x5a, 0x5d, 0x6b, 0x7c, 0xe1, 0xb6, 0xcd, 0xd2, 0x5e, 0x85, 0xc8, 0xe1, 0x22, 0x74, 0x0e,
	0xa7, 0x14, 0x44, 0x04, 0x41, 0x08, 0xc2, 0xd9, 0x53, 0x4f, 0x30, 0xdf, 0xec, 0x71, 0xe9, 0x14,
	0xdb, 0xbe, 0xea, 0xd4, 0x9f, 0x2f, 0x42, 0xa6, 0x0e, 0x99, 0xe7, 0xf8, 0x3c, 0x5e, 0x36, 0xb0,
	0xa5, 0xc1, 0x96, 0x06, 0x5b, 0x3e, 0xfc, 0x49, 0x78, 0x6d, 0x2d, 0x3c, 0xff, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x26, 0x32, 0x44, 0x46, 0x3f, 0x06, 0x00, 0x00,
}
